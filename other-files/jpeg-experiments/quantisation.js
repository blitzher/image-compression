// JPEG quantisation example

// Stuff from https://en.wikipedia.org/wiki/Quantization_(image_processing)#Quantization_matrices
let table = [
        [16, 11, 10, 16, 24, 40, 51, 61],
        [12, 12, 14, 19, 26, 58, 60, 55],
        [14, 13, 16, 24, 40, 57, 69, 56],
        [14, 17, 22, 29, 51, 87, 80, 62],
        [18, 22, 37, 56, 68, 109, 103, 77],
        [24, 35, 55, 64, 81, 104, 113, 92],
        [49, 64, 78, 87, 103, 121, 120, 101],
        [72, 92, 95, 98, 112, 100, 103, 99],
    ],
    DCT = [
        [-415, -33, -58, 35, 58, -51, -15, 12],
        [5, -34, 49, 18, 27, 1, -5, 3],
        [-46, 14, 80, -35, -50, 19, 7, -18],
        [-53, 21, 34, -20, 2, 34, 36, 12],
        [9, -2, 9, -5, -32, -15, 45, 37],
        [-8, 15, -16, 7, -8, 11, 4, 7],
        [19, -28, -2, -26, -2, 7, -44, -21],
        [18, 25, -12, -44, 35, 48, -37, -3],
    ],
    out = [[], [], [], [], [], [], [], []];

for (i = 0; i < 8; i++) {
    for (j = 0; j < 8; j++) {
        out[i][j] = Math.round(DCT[i][j] / table[i][j]);
    }
}

out.forEach((x) => console.log(x.join('\t')));
